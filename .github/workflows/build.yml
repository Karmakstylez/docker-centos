name: build

on:
  push:
    branches:
      - master
    tags:
      - '*.*.*'
  pull_request:
    branches:
      - master
  schedule:
    # weekly: at 04:13 on Monday
    - cron: '13 4 * * 1'

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Build, squash and push
      run: |
        echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
        docker build --tag ghcr.io/tgagor/centos-stream --cache-from ghcr.io/tgagor/centos-stream .
        docker run --name tgagor-centos-stream ghcr.io/tgagor/centos-stream true
        docker export tgagor-centos-stream | docker import - ghcr.io/tgagor/centos-stream
        docker tag ghcr.io/tgagor/centos-stream ghcr.io/tgagor/centos-stream:${GITHUB_REF##*/}
        docker tag ghcr.io/tgagor/centos-stream ghcr.io/tgagor/centos-stream:${GITHUB_REF##*/}
        docker push ghcr.io/tgagor/centos-stream
        docker push ghcr.io/tgagor/centos-stream:${GITHUB_REF##*/}

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ghcr.io/tgagor/centos-stream
        format: template
        template: '@/contrib/sarif.tpl'
        # don't fail
        exit-code: 0
        output: trivy-results.sarif

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: trivy-results.sarif

    - name: Bump version and push tag
      if: github.ref == 'refs/heads/master'
      id: tag_version
      uses: mathieudutour/github-tag-action@v5.3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Create normal GitHub release
      if: github.ref == 'refs/heads/master'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag_version.outputs.new_tag }}
        release_name: Release ${{ steps.tag_version.outputs.new_tag }}
        body: ${{ steps.tag_version.outputs.changelog }}

    - name: Get current date
      if: github.event_name == 'schedule'
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
    - name: Create a weekly GitHub release
      if: github.event_name == 'schedule'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag_version.outputs.new_tag }}
        release_name: Release ${{ steps.tag_version.outputs.new_tag }}
        body: |
          Weekly rebuild on ${{ steps.date.outputs.date }}
