name: build

on:
  push:
    branches:
      - master
      - 'feature/*'
    tags:
      - '*.*.*'
  pull_request:
    branches:
      - master
  schedule:
    # weekly: at 04:13 on Monday
    - cron: '13 4 * * 1'

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        tag:
          - centos7
          - centos8
          - stream8
          - stream9-development
    steps:
      - uses: actions/checkout@v2
      - name: Build, squash and push
        run: |
          echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

          # build
          docker build \
            --build-arg TAG=${{ matrix.tag }} \
            --tag tgagor/centos:${{ matrix.tag }} ${{ matrix.tag }}/

          # squash
          docker run --name tgagor-${{ matrix.tag }} tgagor/centos:${{ matrix.tag }} true
          docker export tgagor-${{ matrix.tag }} | docker import - tgagor/centos:${{ matrix.tag }}

          # tag
          docker tag tgagor/centos:${{ matrix.tag }} ghcr.io/tgagor/centos:${{ matrix.tag }}-${{ github.sha }}

          # push
          docker push ghcr.io/tgagor/centos:${{ matrix.tag }}-${{ github.sha }}

  security-scan:
    runs-on: ubuntu-20.04
    needs:
      - build
    strategy:
      matrix:
        tag:
          - centos7
          - centos8
          - stream8
          - stream9-development
    steps:
      - uses: actions/checkout@v2
      - name: Fetch image
        run: |
          echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

          docker pull ghcr.io/tgagor/centos:${{ matrix.tag }}-${{ github.sha }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/tgagor/centos:${{ matrix.tag }}-${{ github.sha }}
          format: template
          template: '@/contrib/sarif.tpl'
          # don't fail
          exit-code: 0
          output: trivy-results.sarif

      - name: Upload Trivy scan results to GitHub Security tab
        if: github.ref == 'refs/heads/master'
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: trivy-results.sarif

  release:
    runs-on: ubuntu-20.04
    needs:
      - build
      - security-scan
    steps:
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        if: github.ref == 'refs/heads/master'
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from tag on master
        if: github.ref == 'refs/heads/master'
        env:
          VERSION_TAG: ${{ steps.tag_version.outputs.new_tag }}
        run: echo "DOCKER_TAG=${VERSION_TAG#v}" >> $GITHUB_ENV

      - name: Use branch name as version not on master
        if: github.ref != 'refs/heads/master'
        run: echo "DOCKER_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Fetch and tag images
        run: |
          echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

          docker pull ghcr.io/tgagor/centos:centos7-${{ github.sha }}
          docker pull ghcr.io/tgagor/centos:centos8-${{ github.sha }}
          docker pull ghcr.io/tgagor/centos:stream8-${{ github.sha }}
          docker pull ghcr.io/tgagor/centos:stream9-development-${{ github.sha }}

          docker tag ghcr.io/tgagor/centos:centos7-${{ github.sha }} tgagor/centos:centos7
          docker tag ghcr.io/tgagor/centos:centos7-${{ github.sha }} tgagor/centos:centos7-${DOCKER_TAG}
          docker tag ghcr.io/tgagor/centos:centos7-${{ github.sha }} tgagor/centos:7

          docker tag ghcr.io/tgagor/centos:centos8-${{ github.sha }} tgagor/centos:centos8
          docker tag ghcr.io/tgagor/centos:centos8-${{ github.sha }} tgagor/centos:centos8-${DOCKER_TAG}
          docker tag ghcr.io/tgagor/centos:centos8-${{ github.sha }} tgagor/centos:8
          docker tag ghcr.io/tgagor/centos:centos8-${{ github.sha }} tgagor/centos:${DOCKER_TAG}
          docker tag ghcr.io/tgagor/centos:centos8-${{ github.sha }} tgagor/centos:latest

          docker tag ghcr.io/tgagor/centos:stream8-${{ github.sha }} tgagor/centos:stream8
          docker tag ghcr.io/tgagor/centos:stream8-${{ github.sha }} tgagor/centos:stream8-${DOCKER_TAG}
          docker tag ghcr.io/tgagor/centos:stream8-${{ github.sha }} tgagor/centos:stream

          docker tag ghcr.io/tgagor/centos:stream9-development-${{ github.sha }} tgagor/centos:stream9
          docker tag ghcr.io/tgagor/centos:stream9-development-${{ github.sha }} tgagor/centos:stream9-${DOCKER_TAG}

      - name: Push images
        if: github.ref == 'refs/heads/master'
        run: |
          echo ${{ secrets.HUB_ACCESS }} | docker login -u $GITHUB_ACTOR --password-stdin

          docker push tgagor/centos:centos7-${DOCKER_TAG}
          docker push tgagor/centos:centos7
          docker push tgagor/centos:7

          docker push tgagor/centos:centos8-${DOCKER_TAG}
          docker push tgagor/centos:centos8
          docker push tgagor/centos:8
          docker push tgagor/centos:${DOCKER_TAG}
          docker push tgagor/centos:latest

          docker push tgagor/centos:stream8-${DOCKER_TAG}
          docker push tgagor/centos:stream8
          docker push tgagor/centos:stream

          docker push tgagor/centos:stream9-${DOCKER_TAG}
          docker push tgagor/centos:stream9

      - name: Create normal GitHub release
        if: github.ref == 'refs/heads/master' && github.event_name != 'schedule'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

      - name: Get current date
        if: github.event_name == 'schedule'
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: Create a weekly GitHub release
        if: github.event_name == 'schedule'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: |
            Weekly rebuild on ${{ steps.date.outputs.date }}
